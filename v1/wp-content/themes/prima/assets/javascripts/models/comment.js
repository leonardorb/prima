// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Prima.Models.Comment = (function(_super) {
    __extends(Comment, _super);

    function Comment() {
      _ref = Comment.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Comment.prototype.url = function() {
      if (this.get('parent') != null) {
        return Prima.BaseURL + 'api/submit_comment?post_id=' + this.get('post_id') + '&parent=' + this.get('parent') + '&name=' + this.get('name') + '&email=' + this.get('email') + '&url=' + this.get('url') + '&content=' + this.get('content');
      } else {
        return Prima.BaseURL + 'api/submit_comment?post_id=' + this.get('post_id') + '&name=' + this.get('name') + '&email=' + this.get('email') + '&url=' + this.get('url') + '&content=' + this.get('content');
      }
    };

    Comment.prototype.validate = function(attrs, options) {
      var errors, message;
      errors = [];
      if (attrs.name.trim() === '') {
        errors.push("Please, insert a valid name.");
      }
      if (attrs.email.trim() === '') {
        errors.push("Please, insert a valid e-mail.");
      }
      if (attrs.content.trim() === '') {
        errors.push("Please, insert your comment.");
      }
      if (errors.length > 0) {
        message = "";
        _.each(errors, function(error) {
          return message += '<p>' + error + '</p>';
        });
        notification.setNotification('error', message);
        return notification.showNotification();
      }
    };

    return Comment;

  })(Backbone.Model);

}).call(this);
